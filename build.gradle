static getBuildNumber() {
    def cal = Calendar.getInstance(TimeZone.getTimeZone("UTC"));
    return 365 * (cal.get(Calendar.YEAR) - 2015) + cal.get(Calendar.DAY_OF_YEAR);
}

buildscript {
    repositories {
        mavenCentral()
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'sonatype'
            url = 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'forge'

sourceCompatibility = javaver
targetCompatibility = javaver

def finalversion = rnversion + '.' + getBuildNumber()

version = finalversion
group = rnname
archivesBaseName = rnname

//configurations {
//    provided
//    embedded
//    compile.extendsFrom provided, embedded
//}

minecraft {
    version = mcversion + '-' + forgeversion
    runDir = 'run'
}

repositories {
    maven {
        name = 'chickenbones'
        url = 'http://chickenbones.net/maven/'
    }
}

dependencies {
//    compile "codechicken:CodeChickenLib:${mcversion}-${cclibversion}:dev"
//    compile "codechicken:CodeChickenCore:${mcversion}-${cccoreversion}:dev"
    compile "codechicken:NotEnoughItems:${mcversion}-${neiversion}:dev"
    compile group: 'org.apache.bcel', name: 'bcel', version: '5.2'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'rnid': rnname, 'version': finalversion
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}